const Customer = require('../models/Customer'); 
const Education = require('../models/Education'); // Import the Customer model
const Order = require('../models/Order'); 
const {ValidationError} = require('../middleware/errorhandler');
// Define the association
// Define associations
Customer.hasMany(Education, { foreignKey: 'customer_id', as: 'educations' });
Education.belongsTo(Customer, { foreignKey: 'id', as: 'customer' });

Customer.hasMany(Order, { foreignKey: 'customer_id', as: 'items' });
Order.belongsTo(Customer, { foreignKey: 'id', as: 'customer' });

//@desc Get all customers
//@route GET /customer
//@access Public

const getCustomers = async (req, res) => {
    try {
        const { id } = req.params;
        if(id){
            const customers = await Customer.findByPk(id,{
                include: [{ model: Education, as: 'educations' }, { model: Order, as: 'items' , attributes: ['id', 'item', 'amount'],},],
            });
            if (!customers) {
                return res.status(404).json({ error: 'Customer not found' });
              }
            res.status(200).json({message:"Customers fetched successfully",data:customers});
        }else{
            const customers = await Customer.findAll({
        
                include: [{ model: Education, as: 'educations' }, { model: Order, as: 'items' , attributes: ['id', 'item', 'amount'],},],
                order: [
                    ['id', 'ASC'], // Sort customers by 'id' in ascending order
                  ],
                  limit:20,
                  offset:0,
                   // Use the alias defined in the association
              });
              res.status(200).json({message:"Customers fetched successfully",data:customers});
        }
        
      
     
    } catch (err) {
      console.error('Error fetching customers:', err);
      res.status(500).json({ error: 'Database error' });
    }
  }

  //@desc update a customer
  //@route PUT /customer/:id
  //@access Public      
  const updateCustomer =async (req, res) => {
    const { id } = req.params;
    const { name, description } = req.body;

    try {
      const customer = await Customer.findByPk(id);
      if (!customer) {
        return res.status(404).json({ error: 'Customer not found' });
      }

      customer.name = name || customer.name;
      customer.description = description || customer.description;
      await customer.save();

      res.status(200).json({ message: 'Customer updated successfully', data: customer });
    } catch (err) {
      console.error('Error updating customer:', err);
      res.status(500).json({ error: 'Database error' });
    }
  }

  //@desc delete a customer
  //@route DELETE /customer/:id
  //@access Public
  const deleteCustomer = async (req, res) => {
    const { id } = req.params;

    try {
      const customer = await Customer.findByPk(id);
      if (!customer) {
        return res.status(404).json({ error: 'Customer not found' });
      }

      await customer.destroy();
      res.status(200).json({ message: 'Customer deleted successfully' });
    } catch (err) {
      console.error('Error deleting customer:', err);
      res.status(500).json({ error: 'Database error' });
    }
  }

//@desc create a customer
//@route POST /customer
//@access Public    
const createCustomer = async (req, res) => {
    const { name, description,email,password } = req.body;

    if (!name || !description || !email || !password) {
       
       
      return ValidationError(res,'Name, description, email and password are required');
    }

    try {
      const newCustomer = await Customer.create({ name, description,email,password }); // Insert new customer
      res.status(201).json({ message: 'Resource created successfully', data: newCustomer });
    } catch (err) {
      console.error('Error creating customer:', err);
      res.status(500).json({ error: 'Database error' });
    }
  }
  
  //@desc get customer counts
  //@route GET /customerCounts
  //@access Public
  const getCustomerCounts = async (req, res) => {
    const customerCounts = await Customer.count();
    res.status(200).json({ customerCounts });
  }

  //@desc get a customer by id
  //@route GET /customer/:id
  //@access Public
  const getCustomerById = async (req, res) => {
    const { id } = req.params;
   
    const customers = await Customer.findByPk(id,{
        
        include: [{ model: Education, as: 'educations' }, { model: Order, as: 'items' , attributes: ['id', 'item', 'amount'],},],
        order: [
            ['id', 'ASC'], // Sort customers by 'id' in ascending order
          ],
    
           // Use the alias defined in the association
      });
      res.status(200).json({message:"Customers fetched successfully",data:customers});
  }

module.exports = {
    getCustomers,updateCustomer,deleteCustomer,createCustomer,getCustomerCounts,getCustomerById
}
